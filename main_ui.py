# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CCStorage.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_CCStorage(object):
    def setupUi(self, CCStorage):
        CCStorage.setObjectName("CCStorage")
        CCStorage.resize(1320, 726)
        CCStorage.setMinimumSize(QtCore.QSize(1320, 500))
        CCStorage.setMaximumSize(QtCore.QSize(1320, 875))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 255, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        CCStorage.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        CCStorage.setFont(font)
        CCStorage.setAutoFillBackground(False)
        CCStorage.setStyleSheet("  border: 2px solid #1de9b6;\n"
"  border-radius: 4px;\n"
"  height: 32px;\n"
"background-color: rgb(0, 0, 0);\n"
"")
        CCStorage.setAnimated(True)
        CCStorage.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralwidget = QtWidgets.QWidget(CCStorage)
        self.centralwidget.setWhatsThis("")
        self.centralwidget.setObjectName("centralwidget")
        self.bin_check_console = QtWidgets.QTextEdit(self.centralwidget)
        self.bin_check_console.setGeometry(QtCore.QRect(10, 330, 391, 381))
        self.bin_check_console.setObjectName("bin_check_console")
        self.bin_check_textedit = QtWidgets.QTextEdit(self.centralwidget)
        self.bin_check_textedit.setGeometry(QtCore.QRect(410, 340, 171, 31))
        self.bin_check_textedit.setStyleSheet("color: rgb(0, 255, 0);")
        self.bin_check_textedit.setObjectName("bin_check_textedit")
        self.bin_check_button = QtWidgets.QPushButton(self.centralwidget)
        self.bin_check_button.setGeometry(QtCore.QRect(590, 340, 75, 31))
        self.bin_check_button.setStyleSheet("color: rgb(30, 255, 248);\n"
"font: 18pt \"HACKED\";")
        self.bin_check_button.setObjectName("bin_check_button")
        self.import_data_button = QtWidgets.QPushButton(self.centralwidget)
        self.import_data_button.setGeometry(QtCore.QRect(1200, 330, 111, 41))
        self.import_data_button.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 12pt \"HACKED\";")
        self.import_data_button.setObjectName("import_data_button")
        self.discover_lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.discover_lcdNumber.setGeometry(QtCore.QRect(1093, 330, 81, 23))
        self.discover_lcdNumber.setObjectName("discover_lcdNumber")
        self.amex_lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.amex_lcdNumber.setGeometry(QtCore.QRect(1003, 330, 81, 23))
        self.amex_lcdNumber.setObjectName("amex_lcdNumber")
        self.master_lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.master_lcdNumber.setGeometry(QtCore.QRect(900, 330, 91, 23))
        self.master_lcdNumber.setObjectName("master_lcdNumber")
        self.visa_lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.visa_lcdNumber.setGeometry(QtCore.QRect(810, 330, 81, 23))
        self.visa_lcdNumber.setObjectName("visa_lcdNumber")
        self.total_lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.total_lcdNumber.setGeometry(QtCore.QRect(713, 330, 81, 23))
        self.total_lcdNumber.setObjectName("total_lcdNumber")
        self.totallabel = QtWidgets.QLabel(self.centralwidget)
        self.totallabel.setGeometry(QtCore.QRect(710, 360, 81, 21))
        self.totallabel.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 14pt \"HACKED\";")
        self.totallabel.setObjectName("totallabel")
        self.visalabel = QtWidgets.QLabel(self.centralwidget)
        self.visalabel.setGeometry(QtCore.QRect(810, 360, 81, 21))
        self.visalabel.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 14pt \"HACKED\";")
        self.visalabel.setObjectName("visalabel")
        self.mastercard_label = QtWidgets.QLabel(self.centralwidget)
        self.mastercard_label.setGeometry(QtCore.QRect(900, 360, 91, 21))
        self.mastercard_label.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 14pt \"HACKED\";")
        self.mastercard_label.setObjectName("mastercard_label")
        self.amexlabel = QtWidgets.QLabel(self.centralwidget)
        self.amexlabel.setGeometry(QtCore.QRect(1010, 360, 71, 20))
        self.amexlabel.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 14pt \"HACKED\";")
        self.amexlabel.setObjectName("amexlabel")
        self.discoverlabel = QtWidgets.QLabel(self.centralwidget)
        self.discoverlabel.setGeometry(QtCore.QRect(1090, 360, 81, 20))
        self.discoverlabel.setStyleSheet("color: rgb(0, 255, 255);\n"
"font: 14pt \"HACKED\";")
        self.discoverlabel.setObjectName("discoverlabel")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(1055, 390, 251, 321))
        self.textBrowser.setObjectName("textBrowser")
        self.console_text = QtWidgets.QTextEdit(self.centralwidget)
        self.console_text.setGeometry(QtCore.QRect(410, 560, 631, 151))
        self.console_text.setObjectName("console_text")
        self.textEdit_4 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_4.setGeometry(QtCore.QRect(470, 520, 501, 31))
        self.textEdit_4.setObjectName("textEdit_4")
        self.pdf_import_button = QtWidgets.QPushButton(self.centralwidget)
        self.pdf_import_button.setGeometry(QtCore.QRect(930, 400, 111, 41))
        self.pdf_import_button.setStyleSheet("font: 14pt \"HACKED\";\n"
"color: rgb(15, 251, 255);")
        self.pdf_import_button.setObjectName("pdf_import_button")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 1311, 311))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.treeWidget = QtWidgets.QTreeWidget(self.tab)
        self.treeWidget.setGeometry(QtCore.QRect(0, 0, 1321, 311))
        self.treeWidget.setObjectName("treeWidget")
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(0, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(1, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(2, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(3, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(4, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(5, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(6, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(7, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(8, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(9, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(10, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(11, brush)
        font = QtGui.QFont()
        font.setBold(False)
        self.treeWidget.headerItem().setFont(12, font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget.headerItem().setForeground(12, brush)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.treeWidget_2 = QtWidgets.QTreeWidget(self.tab_2)
        self.treeWidget_2.setGeometry(QtCore.QRect(0, 0, 1321, 321))
        self.treeWidget_2.setObjectName("treeWidget_2")
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(0, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(3, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(7, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(8, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(9, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(10, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(11, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(14, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(15, brush)
        font = QtGui.QFont()
        font.setBold(False)
        self.treeWidget_2.headerItem().setFont(16, font)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        self.treeWidget_2.headerItem().setForeground(16, brush)
        self.tabWidget.addTab(self.tab_2, "")
        self.update_counts_button = QtWidgets.QPushButton(self.centralwidget)
        self.update_counts_button.setGeometry(QtCore.QRect(760, 390, 121, 51))
        self.update_counts_button.setStyleSheet("font: 14pt \"HACKED\";\n"
"color: rgb(15, 251, 255);")
        self.update_counts_button.setObjectName("update_counts_button")
        CCStorage.setCentralWidget(self.centralwidget)
        self.actionaboutButton = QtWidgets.QAction(CCStorage)
        self.actionaboutButton.setMenuRole(QtWidgets.QAction.AboutRole)
        self.actionaboutButton.setObjectName("actionaboutButton")
        self.windows_menu_actionDiamondPad = QtWidgets.QAction(CCStorage)
        self.windows_menu_actionDiamondPad.setObjectName("windows_menu_actionDiamondPad")
        self.window_menu_actionPrefrences = QtWidgets.QAction(CCStorage)
        self.window_menu_actionPrefrences.setObjectName("window_menu_actionPrefrences")
        self.window_menu_actionRegex = QtWidgets.QAction(CCStorage)
        self.window_menu_actionRegex.setObjectName("window_menu_actionRegex")
        self.actionRegex_Cheat_Sheet = QtWidgets.QAction(CCStorage)
        self.actionRegex_Cheat_Sheet.setObjectName("actionRegex_Cheat_Sheet")
        self.actionHints_Tricks = QtWidgets.QAction(CCStorage)
        self.actionHints_Tricks.setObjectName("actionHints_Tricks")
        self.actionDataParsing = QtWidgets.QAction(CCStorage)
        self.actionDataParsing.setObjectName("actionDataParsing")
        self.actionDisplay_Console = QtWidgets.QAction(CCStorage)
        self.actionDisplay_Console.setObjectName("actionDisplay_Console")
        self.actionDisplay_HTTP_Client = QtWidgets.QAction(CCStorage)
        self.actionDisplay_HTTP_Client.setObjectName("actionDisplay_HTTP_Client")
        self.actionEnable_Everything = QtWidgets.QAction(CCStorage)
        self.actionEnable_Everything.setObjectName("actionEnable_Everything")
        self.actionLaunch_Browser = QtWidgets.QAction(CCStorage)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../Desktop/Diamond Dumper1/icons/diamond.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLaunch_Browser.setIcon(icon)
        self.actionLaunch_Browser.setVisible(True)
        self.actionLaunch_Browser.setObjectName("actionLaunch_Browser")
        self.actionUndetected_Chrome = QtWidgets.QAction(CCStorage)
        self.actionUndetected_Chrome.setObjectName("actionUndetected_Chrome")
        self.actionShow_Widget_Functions = QtWidgets.QAction(CCStorage)
        self.actionShow_Widget_Functions.setObjectName("actionShow_Widget_Functions")
        self.actionInsomnia_HTTP_Client = QtWidgets.QAction(CCStorage)
        self.actionInsomnia_HTTP_Client.setObjectName("actionInsomnia_HTTP_Client")
        self.actionloadDirectory = QtWidgets.QAction(CCStorage)
        icon = QtGui.QIcon.fromTheme("accessories-text-editor")
        self.actionloadDirectory.setIcon(icon)
        self.actionloadDirectory.setMenuRole(QtWidgets.QAction.ApplicationSpecificRole)
        self.actionloadDirectory.setObjectName("actionloadDirectory")
        self.actionMembership = QtWidgets.QAction(CCStorage)
        self.actionMembership.setObjectName("actionMembership")
        self.actionTelegram_Group = QtWidgets.QAction(CCStorage)
        self.actionTelegram_Group.setObjectName("actionTelegram_Group")
        self.actionMentorship = QtWidgets.QAction(CCStorage)
        self.actionMentorship.setObjectName("actionMentorship")
        self.actionHomepage = QtWidgets.QAction(CCStorage)
        self.actionHomepage.setObjectName("actionHomepage")
        self.actionMarkdownV2_Format = QtWidgets.QAction(CCStorage)
        self.actionMarkdownV2_Format.setObjectName("actionMarkdownV2_Format")
        self.actionHTML_Style = QtWidgets.QAction(CCStorage)
        self.actionHTML_Style.setObjectName("actionHTML_Style")
        self.actionMarkdown = QtWidgets.QAction(CCStorage)
        self.actionMarkdown.setObjectName("actionMarkdown")

        self.retranslateUi(CCStorage)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(CCStorage)

    def retranslateUi(self, CCStorage):
        _translate = QtCore.QCoreApplication.translate
        CCStorage.setWindowTitle(_translate("CCStorage", "DiamondSorter"))
        self.bin_check_button.setText(_translate("CCStorage", "BIN Chk"))
        self.import_data_button.setText(_translate("CCStorage", "Import Data"))
        self.totallabel.setText(_translate("CCStorage", "   Total"))
        self.visalabel.setText(_translate("CCStorage", "    Visa"))
        self.mastercard_label.setText(_translate("CCStorage", "  Master"))
        self.amexlabel.setText(_translate("CCStorage", "  AMEX"))
        self.discoverlabel.setText(_translate("CCStorage", "Discover"))
        self.textBrowser.setPlaceholderText(_translate("CCStorage", "Can use this part to paste data to import into the treeWidget"))
        self.pdf_import_button.setText(_translate("CCStorage", "PDF Import"))
        self.treeWidget.headerItem().setText(0, _translate("CCStorage", "Date Imported"))
        self.treeWidget.headerItem().setText(1, _translate("CCStorage", "CC"))
        self.treeWidget.headerItem().setText(2, _translate("CCStorage", "MM/YY"))
        self.treeWidget.headerItem().setText(3, _translate("CCStorage", "CVV"))
        self.treeWidget.headerItem().setText(4, _translate("CCStorage", "NAME"))
        self.treeWidget.headerItem().setText(5, _translate("CCStorage", "ADDRESS"))
        self.treeWidget.headerItem().setText(6, _translate("CCStorage", "CITY"))
        self.treeWidget.headerItem().setText(7, _translate("CCStorage", "STATE"))
        self.treeWidget.headerItem().setText(8, _translate("CCStorage", "ZIP"))
        self.treeWidget.headerItem().setText(9, _translate("CCStorage", "COUNTRY"))
        self.treeWidget.headerItem().setText(10, _translate("CCStorage", "I.P"))
        self.treeWidget.headerItem().setText(11, _translate("CCStorage", "UA"))
        self.treeWidget.headerItem().setText(12, _translate("CCStorage", "SOURCED"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("CCStorage", "Credit Cards"))
        self.treeWidget_2.headerItem().setText(0, _translate("CCStorage", "Date Imported"))
        self.treeWidget_2.headerItem().setText(1, _translate("CCStorage", "ACCOUNT TYPE"))
        self.treeWidget_2.headerItem().setText(2, _translate("CCStorage", "BANK"))
        self.treeWidget_2.headerItem().setText(3, _translate("CCStorage", "NAME"))
        self.treeWidget_2.headerItem().setText(4, _translate("CCStorage", "AN"))
        self.treeWidget_2.headerItem().setText(5, _translate("CCStorage", "RN"))
        self.treeWidget_2.headerItem().setText(6, _translate("CCStorage", "NAME"))
        self.treeWidget_2.headerItem().setText(7, _translate("CCStorage", "ADDRESS"))
        self.treeWidget_2.headerItem().setText(8, _translate("CCStorage", "CITY"))
        self.treeWidget_2.headerItem().setText(9, _translate("CCStorage", "STATE"))
        self.treeWidget_2.headerItem().setText(10, _translate("CCStorage", "ZIP"))
        self.treeWidget_2.headerItem().setText(11, _translate("CCStorage", "COUNTRY"))
        self.treeWidget_2.headerItem().setText(12, _translate("CCStorage", "DOB"))
        self.treeWidget_2.headerItem().setText(13, _translate("CCStorage", "SSN"))
        self.treeWidget_2.headerItem().setText(14, _translate("CCStorage", "I.P"))
        self.treeWidget_2.headerItem().setText(15, _translate("CCStorage", "UA"))
        self.treeWidget_2.headerItem().setText(16, _translate("CCStorage", "SOURCED"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("CCStorage", "ACCOUNT NUMBER/ROUTING"))
        self.update_counts_button.setText(_translate("CCStorage", "UPDATE COUNT"))
        self.actionaboutButton.setText(_translate("CCStorage", "aboutButton"))
        self.windows_menu_actionDiamondPad.setText(_translate("CCStorage", "Diamond Pad (Coming Soon)"))
        self.window_menu_actionPrefrences.setText(_translate("CCStorage", "Regex Creator (Coming Soon)"))
        self.window_menu_actionRegex.setText(_translate("CCStorage", "Expression Veiwer (Coming Soon)"))
        self.actionRegex_Cheat_Sheet.setText(_translate("CCStorage", "Regex Cheat Sheet"))
        self.actionHints_Tricks.setText(_translate("CCStorage", "Hints & Tricks"))
        self.actionDataParsing.setText(_translate("CCStorage", "DataParsing"))
        self.actionDisplay_Console.setText(_translate("CCStorage", "Display Console (Coming Soon)"))
        self.actionDisplay_HTTP_Client.setText(_translate("CCStorage", "Display HTTP Client"))
        self.actionEnable_Everything.setText(_translate("CCStorage", "Enable \"Everything\"(Coming Soon)"))
        self.actionLaunch_Browser.setText(_translate("CCStorage", "Launch Browser"))
        self.actionUndetected_Chrome.setText(_translate("CCStorage", "Undetected Chrome"))
        self.actionShow_Widget_Functions.setText(_translate("CCStorage", "Show Widget Functions (Coming Soon)"))
        self.actionInsomnia_HTTP_Client.setText(_translate("CCStorage", "Insomnia HTTP Client"))
        self.actionloadDirectory.setText(_translate("CCStorage", "loadDirectory"))
        self.actionMembership.setText(_translate("CCStorage", "Membership"))
        self.actionTelegram_Group.setText(_translate("CCStorage", "Telegram Group"))
        self.actionMentorship.setText(_translate("CCStorage", "Mentorship"))
        self.actionHomepage.setText(_translate("CCStorage", "Homepage"))
        self.actionMarkdownV2_Format.setText(_translate("CCStorage", "MarkdownV2 Format"))
        self.actionHTML_Style.setText(_translate("CCStorage", "HTML Style"))
        self.actionMarkdown.setText(_translate("CCStorage", "Markdown"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CCStorage = QtWidgets.QMainWindow()
    ui = Ui_CCStorage()
    ui.setupUi(CCStorage)
    CCStorage.show()
    sys.exit(app.exec_())
